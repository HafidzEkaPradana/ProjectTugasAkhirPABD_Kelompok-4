<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zbx6Vt/9euUjpr+fPfx3G333/pU/roxX5uq7d6j8XuX+w/JSffdllTdUcuWt5fruBytfNC2N+u7tKsuu
        4T3+oH/etJTle1Q+flq6sfHH/PumpeOXz67vfqcyXkku71/f/UYll3s9kB24JZa+jr7725X3nP5OgXze
        9PejKg8Z/t5G3/1a5RHT0qjvXlXJ1dD2r+/eqzLu6IxF+Aemv9+x8qTh722M35vPnZaynEL6ddPSdja9
        zr67XNn+8rx99zWVj52W5m3mevHbmXemsiPXd39SGXcksmMBnHF998uVD5+Wttd371v5o2lp1Hc/Vzn4
        MdnWuDPwlMpPVp42rV2m7z66kkKWS2aOxqKUy4tub2zJLtsJaI2v485p6WT03U9X/ta0lOW0rL5hWsry
        AysHLfZt7PI6dnkPN30f++67K8ffQtzna+67x1dybfntbXqd6fXatqcgshPWbqPv3rUy9t4ssen/b+CM
        262g/7/K2K04Fo1fqCzvFh27ON+mkqGAbGP59cFzn777xconTstvWlneqhh/mL++km7UdPc+Y/qX7ZxO
        QU/36qumpSyn6/j3K+N1wMfu5FzHfXunW9AfPy1lOZ/jayvnoaB/4fR3vov5Dj19WN7Wfgr6Yyv/u/LN
        lSvT2uUUdDiHdivob6ykeLyk8l8q7zH96/bGLu2xq38cu/3NyqOG5aXGHYPXTX8/uvJBw99LjD/Mr67k
        hzHdyOOP9LZOp6C/feUPKvepZCz74ZXvrWSeQ97fZ0633N7pFvQUwzx+kl6WdMOfh4L+S5XM43h95fOn
        f9neWNCv3oHsu1sq2xf06Lt3qWQI63crP1Q5yv+XCjqcO7sV9D+elrKcSXGvnZa2N3ZNfkll/gH/icr3
        TP+6THoHxvHkTK46mFi1xHox6rt7Tn9tZ5eisItx8lkmM33GtPwJlR+pfEzlKF2uuxa3i9jlfvv0d76H
        Gf7ZbjLlbJxU+PxpadR3j6lsPy+l795t+it/Zz7Fd1a+cVqzPQUdzqHdCvrB//Dj7Nq0CB48rdlOZte3
        8oPUd39YOdos8XEy0o9XPmZas8ymYpQJgNvaVBTG7vvtZnofVd89svIrlbGbd5y9/VuVlwzLSynoy1y7
        I/i8yrdNS9vpuydUfqrSHqlxe2X74ZJxEtwDp6Us/6PKy6el7SnocM5k9vZYPL+y8rbT2u2Mh7Oky/2J
        05qsy1huWgTbHa6T7uy+++HKfaY1WXf/yv+qpKvwoLWxrb57n0pmyy8bM47M0u67n6/8WCWvJT+G/6Ty
        4ukWh+u7t6pkQtr/qKTnIT/QGb/+oekWx2cct82wx0FrfOx2PUp3+/w6soPwoGntdvruQyuZy/D9lWU9
        Aynk4/fxRdOarMvRFP+18l2V/R+2Nhtnu+cxfrWytIt7/t5kQtr4XR4nembsf/sZ5jEetpainCNRvqCy
        bGe77z65kl6uHOqWQ+jS6l/W5T627PPY+f/7qdNaAGCRcd7Dvaelo+m7d64c3w4QAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAx+7Spf8PI/qnvR+ONmIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAUAAAAAAAAAOgAAANwAAACvAAAAKQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAxAAAAqAAAAGIAAAClAAAAfgAAAK8AAAB5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAB6AAAAnwAAAJ4AAACeAAAAngAA
        AJ4AAACeAAAAngAAAJ4AAACeAAAAngAAAJ4AAACgAAAAWQAAAF0AAADCAAAArAAAAKMAAAA6AAAAtwAA
        AEcAAABiAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAKoAAABUAAAAVAAA
        AFQAAABUAAAAVAAAAFQAAABUAAAAVAAAAFQAAABUAAAAVAAAAFUAAAAsAAAAYAAAAJQAAAAJAAAACAAA
        AFwAAADFAAAANgAAAKEAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAWgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAlQAA
        AAAAAAAAAAAAEQAAAJMAAADGAAAAdwAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJsAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAMAAAABAAAAAAAA
        AGAAAACVAAAAAAAAAAsAAABZAAAAuQAAAI4AAABnAAAAmgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAmwAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAAJEAAAClAAAApQAA
        AJEAAAAhAAAAXgAAAJgAAAA8AAAAqAAAALAAAABJAAAAAQAAAFgAAACbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACbAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTAAAAkgAA
        AEYAAABGAAAAkgAAAI4AAABWAAAA3gAAALwAAABnAAAADwAAAAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJsAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIsAAACgAAAAXQAAAF0AAACgAAAAiQAAABUAAABYAAAAIAAAAAAAAAAAAAAAAAAAAAAAAABYAAAAmwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHAAAAHwAAACTAAAAkwAAAHwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFgAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAWAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJsAAABYAAAAAAAA
        AAAAAAAFAAAAJQAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAAAC4AAAAuAAAALgAA
        ACUAAAAFAAAAAAAAAAAAAABYAAAAmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwAA
        AFgAAAAAAAAAAAAAAFEAAADHAAAAtQAAALUAAAC1AAAAtQAAALUAAAC1AAAAtQAAALUAAAC1AAAAtQAA
        ALUAAAC1AAAAxwAAAFEAAAAAAAAAAAAAAFgAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACbAAAAWAAAAAAAAAAAAAAAegAAAIcAAAAQAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAA
        ABQAAAAUAAAAFAAAABAAAACHAAAAegAAAAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJsAAABYAAAAAAAAAAAAAABdAAAAyAAAAKUAAACmAAAApgAAAKYAAACmAAAApgAA
        AKYAAACmAAAApgAAAKYAAACmAAAApQAAAMgAAABdAAAAAAAAAAAAAABYAAAAmwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAmwAAAFgAAAAAAAAAAAAAAAoAAAA9AAAASQAAAEgAAABIAAAASAAA
        AEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABJAAAAPQAAAAoAAAAAAAAAAAAAAFgAAACbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAWAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAACAAAAAAAAAAAAAAAAAAAAWAAA
        AJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJsAAABYAAAAAAAAAAAAAAA0AAAAqAAA
        AK8AAACuAAAArgAAAK4AAACuAAAArgAAAK4AAACuAAAArgAAAK4AAACuAAAArwAAAKgAAAA0AAAAAAAA
        AAAAAABYAAAAmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwAAAFgAAAAAAAAAAAAA
        AHgAAACaAAAANQAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA1AAAAmgAA
        AHgAAAAAAAAAAAAAAFgAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAWAAA
        AAAAAAAAAAAAcAAAALMAAABpAAAAawAAAGsAAABrAAAAawAAAGsAAABrAAAAawAAAGsAAABrAAAAawAA
        AGkAAACzAAAAcAAAAAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJsAAABYAAAAAAAAAAAAAAAeAAAAegAAAIkAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiQAAAHoAAAAeAAAAAAAAAAAAAABYAAAAmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAmwAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAAACbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACbAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABYAAAAdgAA
        AHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHYAAABYAAAABQAAAAAAAAAAAAAAAAAAAAAAAABYAAAAmwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAACIAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        AGMAAACFAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAhQAAAGMAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AFgAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaAAAAWQAAAAAAAAACAAAAAgAA
        AAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAgAA
        AAIAAAAAAAAAWQAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0AAADGAAAAoQAA
        AJ8AAACgAAAAowAAAKEAAACfAAAAoQAAAKMAAAChAAAAnwAAAKIAAACjAAAAowAAAKMAAACjAAAAowAA
        AKMAAACjAAAAowAAAKEAAADGAAAAnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnAAA
        AIwAAABVAAAAkAAAAHoAAABNAAAAYwAAAJYAAABqAAAATAAAAHMAAACUAAAAXAAAAE0AAABOAAAATgAA
        AE4AAABOAAAATgAAAE4AAABOAAAASwAAAIwAAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACbAAAAVQAAAGQAAADAAAAAuQAAAC0AAACRAAAAvgAAAKEAAAAmAAAAsQAAAL8AAAB9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJsAAABWAAAAgAAAAK4AAADDAAAAQgAAAKsAAACkAAAAuAAAADoAAADBAAAAqAAA
        AJoAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAAmwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAjQAAAH8AAAA2AAAAmQAAAHgAAAAfAAAAUAAAAKEAAABcAAAAHQAA
        AGwAAACeAAAAQgAAABgAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGAAAAIEAAACNAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAyQAAANIAAADOAAAAzQAAANAAAADNAAAAzAAA
        AMwAAADPAAAAzAAAAMwAAADNAAAAzwAAANAAAADRAAAA0QAAANIAAADSAAAA0wAAANQAAADVAAAAyQAA
        ADgAAAAAAAAAAAAAAAAAAAAA///kP/wAID/wAAAP8AAAD/P/5g/z/CQP8/gAD/P4AM/z+APP8/gfz/P/
        /8/zAADP8wAAz/MAAM/zAADP8wAAz/OAAc/zAADP8wAAz/MAAM/zAADP8///z/P//8/zwAPP88ADz/If
        +E/wAAAP8AAAD/AAf8/wAD/P8AAAD/AAAA8=
</value>
  </data>
</root>